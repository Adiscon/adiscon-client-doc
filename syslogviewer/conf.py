# -*- coding: utf-8 -*-
#
# Configuration Program documentation build configuration file, created by
# sphinx-quickstart on Fri Jul 26 10:43:58 2019.
#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
# import os
# import sys
# sys.path.insert(0, os.path.abspath('.'))

import importlib
import sys
from pathlib import Path

sys.path.insert(0, str(Path(__file__).resolve().parents[1]))

from conf_common import (
    enable_spelling_extension,
    get_spelling_word_list,
    load_linkcheck_ignore,
)


# -- General configuration ------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = ['sphinx.ext.autodoc',
    'sphinx.ext.todo',
    'sphinx.ext.ifconfig',
    'sphinx.ext.viewcode',
    'sphinx_sitemap',
    'rst2pdf.pdfbuilder']
extensions = enable_spelling_extension(extensions)

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = '.rst'

# The master toctree document.
master_doc = 'index.syslogviewer'

# General information about the project.
project = u'InterActive SyslogViewer'
copyright = u'2020, Adiscon GmbH'
author = u'Adiscon GmbH'

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
version = u'1.8'
# The full version, including alpha/beta/rc tags.
release = u'1.8'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = 'en'

linkcheck_ignore = load_linkcheck_ignore(__file__)
spelling_word_list_filename = get_spelling_word_list(__file__)

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This patterns also effect to html_static_path and html_extra_path
_shared_label_sources = {
    'glossaryofterms/engine-only-install.rst',
    'glossaryofterms/mwconcepts-actions.rst',
    'glossaryofterms/mwconcepts-filterconditions.rst',
    'glossaryofterms/mwconcepts-informationunit.rst',
    'glossaryofterms/mwconcepts-services.rst',
    'glossaryofterms/mwlineofproducts.rst',
    'glossaryofterms/registry-file.rst',
    'glossaryofterms/rfc5424.rst',
    'glossaryofterms/rfc3195.rst',
    'glossaryofterms/rules.rst',
    'glossaryofterms/ruleengine.rst',
    'glossaryofterms/setp.rst',
    'glossaryofterms/smtp.rst',
    'glossaryofterms/tcp.rst',
    'mwagentspecific/a-callruleset.rst',
    'mwagentspecific/a-setstatus.rst',
    'references/accessingproperties.rst',
    'references/cpumemorymonitor.rst',
    'references/customproperties.rst',
    'references/databasemonitor.rst',
    'references/diskspacemonitor.rst',
    'references/eventproperties.rst',
    'references/eventspecificproperties.rst',
    'references/examples.rst',
    'references/filemonitor.rst',
    'references/frompos.rst',
    'references/ftpprobe.rst',
    'references/httpprobe.rst',
    'references/imapprobe.rst',
    'references/mwechorequest.rst',
    'references/nntpprobe.rst',
    'references/options.rst',
    'references/pingprobe.rst',
    'references/pop3probe.rst',
    'references/portprobe.rst',
    'references/property.rst',
    'references/serialmonitor.rst',
    'references/smtpprobe.rst',
    'references/standardproperties.rst',
    'references/syslogmessageproperties.rst',
    'references/systemproperties.rst',
    'references/topos.rst',
    'references/wineventlogproperties.rst',
    'references/wineventlogv2properties.rst',
    'references/winservicemonitor.rst',
}

_raw_exclude_patterns = [
    'articles/*.rst','commonuses.rst','mwagentspecific/*.rst',
    'gettingstarted/*.rst','gettinghelp.rst','introduction/*.rst',
    'interactivesyslogviewer/index.rst',
    'index.mwagent.rst',
    'index.rsyslog.rst',
    'rsyslogwaspecific/*.rst','rsyslogwaspecific/faq/start-program-action-troubleshooting.rst',
    'index.eventreporter.rst','eventreporterspecific/*.rst','eventreporterspecific/faq/*.rst',
    'index.winsyslog.rst','producttour/*.rst','purchasingmwagent.rst','references/*.rst',
    'winsyslogspecific/*.rst','winsyslogspecific/faq/*.rst','winsyslogspecific/glossaryofterms.rst',
    'glossaryofterms/index.rst','glossaryofterms/*.rst','glossaryofterms/wsconcepts-*.rst','stepbystepguides.rst','stepbystepguides/*.rst',
    'monitorwareconcepts.rst','mwagent/*.rst','index.winsyslog-j.rst',
    'faq/*.rst','mwagentspecific/faq/*.rst',
    'shared/actions/*.rst'
]

exclude_patterns = []
for pattern in _raw_exclude_patterns:
    if pattern not in {'mwagentspecific/*.rst', 'glossaryofterms/*.rst', 'references/*.rst'}:
        exclude_patterns.append(pattern)
        continue

    source_root = Path(__file__).resolve().parent.parent / 'source'
    if pattern.startswith('mwagentspecific'):
        target_folder = source_root / 'mwagentspecific'
    elif pattern.startswith('glossaryofterms'):
        target_folder = source_root / 'glossaryofterms'
    else:
        target_folder = source_root / 'references'
    if not target_folder.exists():
        continue

    for candidate in sorted(target_folder.glob('*.rst')):
        relative_path = candidate.relative_to(source_root)
        normalized = str(relative_path).replace('\\', '/')
        if normalized not in _shared_label_sources:
            exclude_patterns.append(normalized)


# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = True


# -- Options for HTML output ----------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
# Base URL for sitemap generation
html_baseurl = 'https://www.adiscon.com/adiscon-tools/adiscons-interactive-syslogviewer/manual/'

# Sitemap configuration to remove language/version from URLs
sitemap_url_scheme = "{link}"
sitemap_localtolinks = False
sitemap_filename = "sitemap.xml"

if importlib.util.find_spec("furo") is not None:
    html_theme = "furo"
    html_theme_options = {
        # Furo theme options (removed 'show_related' as it's not supported)
        "sidebar_hide_name": False,
        "light_css_variables": {
            "color-brand-primary": "#336699",
            "color-brand-content": "#336699",
        },
        "dark_css_variables": {
            "color-brand-primary": "#5599dd",
            "color-brand-content": "#5599dd",
        },
    }
else:
    html_theme = "alabaster"
    html_theme_options = {}


# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
# html_static_path = ['_static']
# needs to be set if used, otherwise the folder _static is searched in the same folder where the conf.py is located. 
# html_static_path = ['../_static']
# is not needed at the moment. But causes problems if htmlhelp is generated in the ubuntu windows subsystem, there the _static
# folder is not created as in the ubuntu vm when generating the manual/pdf.
# Custom sidebar templates, must be a dictionary that maps document names
# to template names.
#
# Furo theme has its own sidebar system, so we remove the custom sidebars
# or use Furo-compatible ones

# html_sidebars = {
#     '**': [
#         'about.html',          # Not available in Furo
#         'relations.html',      # Not available in Furo
#         'globaltoc.html',      # Built into Furo
#         'searchbox.html',      # Built into Furo
#     ] 
# }


# -- Options for HTMLHelp output ------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = 'InterActiveSyslogViewer'



# -- Options for LaTeX output ---------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #
    # 'papersize': 'letterpaper',

    # The font size ('10pt', '11pt' or '12pt').
    #
    # 'pointsize': '10pt',

    # Additional stuff for the LaTeX preamble.
    #
    # 'preamble': '',

    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (master_doc, 'InterActiveSyslogViewer.tex', u'InterActive SyslogViewer Configuration Documentation',
     u'Adiscon GmbH', 'manual'),
]


# -- Options for manual page output ---------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    (master_doc, 'InterActiveSyslogViewer', u'InterActive SyslogViewer Configuration Documentation',
     [author], 1)
]


# -- Options for Texinfo output -------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (master_doc, 'InterActiveSyslogViewer', u'InterActive SyslogViewer Configuration Documentation',
     author, 'InterActiveSyslogViewer', 'Realtime Syslog Viewer.',
     'System Tools'),
]



# -- Options for PDF output -------------------------------------------

pdf_documents = [
    (master_doc, u'InterActiveSyslogViewer', u'InterActive SyslogViewer Configuration Documentation',
     author, 'InterActiveSyslogViewer', 'Realtime Syslog Viewer.',
     'System Tools'),
]






